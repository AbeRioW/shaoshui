C51 COMPILER V9.01   DS18B20                                                               04/04/2025 13:17:49 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\output\ds18b20.obj
COMPILER INVOKED BY: D:\ProgramFiles\KEIL4\C51\BIN\C51.EXE bsp\ds18b20.c BROWSE INCDIR(.\bsp) DEBUG OBJECTEXTEND PRINT(.
                    -\listing\ds18b20.lst) OBJECT(.\output\ds18b20.obj)

line level    source

   1          #include"ds18b20.h"
   2          #include"stdio.h"
   3          /*******************************************************************************
   4          * 函数名         : Delay1ms
   5          * 函数功能                 : 延时函数
   6          * 输入           : 延时时长，单位ms
   7          * 输出           : 无
   8          *******************************************************************************/
   9          
  10          void Delay1ms(uint c)
  11          {
  12   1              uchar a,b;
  13   1              for (; c>0; c--)
  14   1              {
  15   2                       for (b=199;b>0;b--)
  16   2                       {
  17   3                              for(a=1;a>0;a--);
  18   3                       }      
  19   2              }
  20   1      }
  21          /*******************************************************************************
  22          * 函数名         : DS18B20Init
  23          * 函数功能                 : 初始化
  24          * 输入           : 无
  25          * 输出           : 初始化成功返回1，失败返回0
  26          *******************************************************************************/
  27          
  28          uchar DS18B20Init()
  29          {
  30   1              uint i;
  31   1              DSPORT=0;                        //将总线拉低480us~960us
  32   1              i=70;   
  33   1              while(i--);//延时642us
  34   1              DSPORT=1;                       //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  35   1              i=0;
  36   1              while(DSPORT)   //等待DS18B20拉低总线
  37   1              {
  38   2                      i++;
  39   2                      if(i>5000)//等待>5MS
  40   2                              return 0;//初始化失败   
  41   2              }
  42   1              return 1;//初始化成功
  43   1      }
  44          
  45          /*******************************************************************************
  46          * 函数名         : DS18B20WriteByte
  47          * 函数功能                 : 向18B20写入一个字节
  48          * 输入           : dat
  49          * 输出           : 无
  50          *******************************************************************************/
  51          
  52          void DS18B20WriteByte(uchar dat)
  53          {
  54   1              uint i,j;
C51 COMPILER V9.01   DS18B20                                                               04/04/2025 13:17:49 PAGE 2   

  55   1              for(j=0;j<8;j++)
  56   1              {
  57   2                      DSPORT=0;                       //每写入一位数据之前先把总线拉低1us
  58   2                      i++;
  59   2                      DSPORT=dat&0x01; //然后写入一个数据，从最低位开始
  60   2                      i=6;
  61   2                      while(i--); //延时68us，持续时间最少60us
  62   2                      DSPORT=1;       //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  63   2                      dat>>=1;
  64   2              }
  65   1      }
  66          /*******************************************************************************
  67          * 函数名         : DS18B20ReadByte
  68          * 函数功能               : 读取一个字节
  69          * 输入           : 无
  70          * 输出           : 1个字节数据
  71          *******************************************************************************/
  72          
  73          
  74          uchar DS18B20ReadByte()
  75          {
  76   1              uchar byte,bi;
  77   1              uint i,j;       
  78   1              for(j=8;j>0;j--)
  79   1              {
  80   2                      DSPORT=0;//先将总线拉低1us
  81   2                      i++;
  82   2                      DSPORT=1;//然后释放总线
  83   2                      i++;
  84   2                      i++;//延时6us等待数据稳定
  85   2                      bi=DSPORT;       //读取数据，从最低位开始读取
  86   2                      /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  87   2                      byte=(byte>>1)|(bi<<7);                                           
  88   2                      i=4;            //读取完之后等待48us再接着读取下一个数
  89   2                      while(i--);
  90   2              }                               
  91   1              return byte;
  92   1      }
  93          /*******************************************************************************
  94          * 函数名         : DS18B20TransfTemp
  95          * 函数功能                 : 让18b20开始转换温度
  96          * 输入           : 无
  97          * 输出           : 无
  98          *******************************************************************************/
  99          
 100          void  DS18B20TransfTemp()
 101          {
 102   1              DS18B20Init();
 103   1              Delay1ms(1);
 104   1              DS18B20WriteByte(0xcc);         //跳过ROM操作命令                
 105   1              DS18B20WriteByte(0x44);     //温度转换命令
 106   1              Delay1ms(100);  //等待转换成功
 107   1         
 108   1      }
 109          /*******************************************************************************
 110          * 函数名         : DS18B20ReadTempCom
 111          * 函数功能                 : 发送读取温度命令
 112          * 输入           : 无
 113          * 输出           : 无
 114          *******************************************************************************/
 115          
 116          void  DS18B20ReadTempCom()
C51 COMPILER V9.01   DS18B20                                                               04/04/2025 13:17:49 PAGE 3   

 117          {       
 118   1      
 119   1              DS18B20Init();
 120   1              Delay1ms(1);
 121   1              DS18B20WriteByte(0xcc);  //跳过ROM操作命令
 122   1              DS18B20WriteByte(0xbe);  //发送读取温度命令
 123   1      }
 124          /*******************************************************************************
 125          * 函数名         : DS18B20ReadTemp
 126          * 函数功能               : 读取温度
 127          * 输入           : 无
 128          * 输出           : 温度值数字量（实际温度的补码）
 129          *******************************************************************************/
 130          
 131          int DS18B20ReadTemp()
 132          {
 133   1              int temp=0;
 134   1              uchar tmh,tml;
 135   1              DS18B20TransfTemp();            //先写入转换命令
 136   1              DS18B20ReadTempCom();           //然后等待转换完后发送读取温度命令
 137   1              tml=DS18B20ReadByte();          //读取温度值共16位，先读低字节
 138   1              tmh=DS18B20ReadByte();          //再读高字节
 139   1              temp=tmh;
 140   1              temp<<=8;
 141   1              temp|=tml;
 142   1              return temp;
 143   1      }
 144          
 145          /*******************************************************************************
 146          * 函数名         : DS18B20toString
 147          * 函数功能               : 读取温度值并转化为浮点数（模拟量，保留两位小数）
 148          * 输入           : 无
 149          * 输出           : float 温度 （温度值模拟量，保留两位小数)
 150          *******************************************************************************/
 151          float DS18B20NumTemp()
 152          {
 153   1              float Atemp;
 154   1              int Dtemp=DS18B20ReadTemp();
 155   1              if(Dtemp< 0)                            //当温度值为负数
 156   1              {
 157   2                      //因为读取的温度是实际温度的补码，所以减1，再取反求出原码
 158   2                      Dtemp=Dtemp-1;
 159   2                      Dtemp=~Dtemp;
 160   2                      Atemp=Dtemp*0.0625;
 161   2              }
 162   1              else
 163   1              {                       
 164   2                      //如果温度是正的那么，那么正数的原码就是补码它本身
 165   2                      Atemp=Dtemp*0.0625;
 166   2              }
 167   1              return   Atemp;
 168   1      }
 169          
 170          /*******************************************************************************
 171          * 函数名         : DS18B20toString
 172          * 函数功能               : 读取温度值并转化为字符串（模拟量，保留两位小数）
 173          * 输入           : float 温度值
 174          * 输出           : 字符串指针 （温度值模拟量，保留两位小数)
 175          *******************************************************************************/
 176          uchar* DS18B20toString(float numtemp)
 177          {
 178   1              int i=0,j=0;
C51 COMPILER V9.01   DS18B20                                                               04/04/2025 13:17:49 PAGE 4   

 179   1              uchar temp_str[7]={'\0'};
 180   1              uchar test[7];
 181   1              int itemp= numtemp*100+0.5;
 182   1              if(itemp< 0)                            //当温度值为负数
 183   1                      temp_str[i]='-';
 184   1              if(itemp>=10000)
 185   1                      temp_str[i++] = itemp / 10000+'0';               //百位
 186   1              if(itemp>=1000)
 187   1                      temp_str[i++] =itemp % 10000 / 1000+'0';         //十位
 188   1              temp_str[i++] =  itemp % 1000 / 100+'0';
 189   1              temp_str[i++] =  '.';
 190   1              temp_str[i++] =  itemp % 100 / 10+'0';
 191   1              temp_str[i++] =  itemp % 10+'0';
 192   1              temp_str[i] = '\0';
 193   1              do                                                       //严格C语法不需要这部分，但keil好像存在一些问题
 194   1              {
 195   2                      test[j]=temp_str[j];
 196   2                      j++;    
 197   2              }while(temp_str[j]!='\0');
 198   1              test[j]='\0';
 199   1              return test;
 200   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    661    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      31
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
