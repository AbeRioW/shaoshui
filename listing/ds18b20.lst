C51 COMPILER V9.01   DS18B20                                                               03/30/2025 23:34:10 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\output\ds18b20.obj
COMPILER INVOKED BY: D:\ProgramFiles\KEIL4\C51\BIN\C51.EXE bsp\ds18b20.c BROWSE INCDIR(.\bsp) DEBUG OBJECTEXTEND PRINT(.
                    -\listing\ds18b20.lst) OBJECT(.\output\ds18b20.obj)

line level    source

   1          #include"ds18b20.h"
   2          #include"stdio.h"
   3          
   4          
   5          /*******************************************************************************
   6          * 函数名         : Delay1ms
   7          * 函数功能                 : 延时函数
   8          * 输入           : 延时时长，单位ms
   9          * 输出           : 无
  10          *******************************************************************************/
  11          
  12          void Delay1ms(uint c)
  13          {
  14   1              uchar a,b;
  15   1              for (; c>0; c--)
  16   1              {
  17   2                       for (b=199;b>0;b--)
  18   2                       {
  19   3                              for(a=1;a>0;a--);
  20   3                       }      
  21   2              }
  22   1      }
  23          /*******************************************************************************
  24          * 函数名         : DS18B20Init
  25          * 函数功能                 : 初始化
  26          * 输入           : 无
  27          * 输出           : 初始化成功返回1，失败返回0
  28          *******************************************************************************/
  29          
  30          uchar DS18B20Init()
  31          {
  32   1              uint i;
  33   1              DSPORT=0;                        //将总线拉低480us~960us
  34   1              i=70;   
  35   1              while(i--);//延时642us
  36   1              DSPORT=1;                       //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  37   1              i=0;
  38   1              while(DSPORT)   //等待DS18B20拉低总线
  39   1              {
  40   2                      i++;
  41   2                      if(i>5000)//等待>5MS
  42   2                              return 0;//初始化失败   
  43   2              }
  44   1              return 1;//初始化成功
  45   1      }
  46          
  47          /*******************************************************************************
  48          * 函数名         : DS18B20WriteByte
  49          * 函数功能                 : 向18B20写入一个字节
  50          * 输入           : dat
  51          * 输出           : 无
  52          *******************************************************************************/
  53          
  54          void DS18B20WriteByte(uchar dat)
C51 COMPILER V9.01   DS18B20                                                               03/30/2025 23:34:10 PAGE 2   

  55          {
  56   1              uint i,j;
  57   1              for(j=0;j<8;j++)
  58   1              {
  59   2                      DSPORT=0;                       //每写入一位数据之前先把总线拉低1us
  60   2                      i++;
  61   2                      DSPORT=dat&0x01; //然后写入一个数据，从最低位开始
  62   2                      i=6;
  63   2                      while(i--); //延时68us，持续时间最少60us
  64   2                      DSPORT=1;       //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  65   2                      dat>>=1;
  66   2              }
  67   1      }
  68          /*******************************************************************************
  69          * 函数名         : DS18B20ReadByte
  70          * 函数功能               : 读取一个字节
  71          * 输入           : 无
  72          * 输出           : 1个字节数据
  73          *******************************************************************************/
  74          
  75          
  76          uchar DS18B20ReadByte()
  77          {
  78   1              uchar byte,bi;
  79   1              uint i,j;       
  80   1              for(j=8;j>0;j--)
  81   1              {
  82   2                      DSPORT=0;//先将总线拉低1us
  83   2                      i++;
  84   2                      DSPORT=1;//然后释放总线
  85   2                      i++;
  86   2                      i++;//延时6us等待数据稳定
  87   2                      bi=DSPORT;       //读取数据，从最低位开始读取
  88   2                      /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  89   2                      byte=(byte>>1)|(bi<<7);                                           
  90   2                      i=4;            //读取完之后等待48us再接着读取下一个数
  91   2                      while(i--);
  92   2              }                               
  93   1              return byte;
  94   1      }
  95          /*******************************************************************************
  96          * 函数名         : DS18B20TransfTemp
  97          * 函数功能                 : 让18b20开始转换温度
  98          * 输入           : 无
  99          * 输出           : 无
 100          *******************************************************************************/
 101          
 102          void  DS18B20TransfTemp()
 103          {
 104   1              DS18B20Init();
 105   1              Delay1ms(1);
 106   1              DS18B20WriteByte(0xcc);         //跳过ROM操作命令                
 107   1              DS18B20WriteByte(0x44);     //温度转换命令
 108   1              Delay1ms(100);  //等待转换成功
 109   1         
 110   1      }
 111          /*******************************************************************************
 112          * 函数名         : DS18B20ReadTempCom
 113          * 函数功能                 : 发送读取温度命令
 114          * 输入           : 无
 115          * 输出           : 无
 116          *******************************************************************************/
C51 COMPILER V9.01   DS18B20                                                               03/30/2025 23:34:10 PAGE 3   

 117          
 118          void  DS18B20ReadTempCom()
 119          {       
 120   1      
 121   1              DS18B20Init();
 122   1              Delay1ms(1);
 123   1              DS18B20WriteByte(0xcc);  //跳过ROM操作命令
 124   1              DS18B20WriteByte(0xbe);  //发送读取温度命令
 125   1      }
 126          /*******************************************************************************
 127          * 函数名         : DS18B20ReadTemp
 128          * 函数功能               : 读取温度
 129          * 输入           : 无
 130          * 输出           : 温度值数字量（实际温度的补码）
 131          *******************************************************************************/
 132          
 133          int DS18B20ReadTemp()
 134          {
 135   1              int temp=0;
 136   1              uchar tmh,tml;
 137   1              DS18B20TransfTemp();            //先写入转换命令
 138   1              DS18B20ReadTempCom();           //然后等待转换完后发送读取温度命令
 139   1              tml=DS18B20ReadByte();          //读取温度值共16位，先读低字节
 140   1              tmh=DS18B20ReadByte();          //再读高字节
 141   1              temp=tmh;
 142   1              temp<<=8;
 143   1              temp|=tml;
 144   1              return temp;
 145   1      }
 146          
 147          /*******************************************************************************
 148          * 函数名         : DS18B20toString
 149          * 函数功能               : 读取温度值并转化为浮点数（模拟量，保留两位小数）
 150          * 输入           : 无
 151          * 输出           : float 温度 （温度值模拟量，保留两位小数)
 152          *******************************************************************************/
 153          float DS18B20NumTemp()
 154          {
 155   1              float Atemp;
 156   1              int Dtemp=DS18B20ReadTemp();
 157   1              if(Dtemp< 0)                            //当温度值为负数
 158   1              {
 159   2                      //因为读取的温度是实际温度的补码，所以减1，再取反求出原码
 160   2                      Dtemp=Dtemp-1;
 161   2                      Dtemp=~Dtemp;
 162   2                      Atemp=Dtemp*0.0625;
 163   2              }
 164   1              else
 165   1              {                       
 166   2                      //如果温度是正的那么，那么正数的原码就是补码它本身
 167   2                      Atemp=Dtemp*0.0625;
 168   2              }
 169   1              return   Atemp;
 170   1      }
 171          
 172          /*******************************************************************************
 173          * 函数名         : DS18B20toString
 174          * 函数功能               : 读取温度值并转化为字符串（模拟量，保留两位小数）
 175          * 输入           : float 温度值
 176          * 输出           : 字符串指针 （温度值模拟量，保留两位小数)
 177          *******************************************************************************/
 178          uchar* DS18B20toString(float numtemp)
C51 COMPILER V9.01   DS18B20                                                               03/30/2025 23:34:10 PAGE 4   

 179          {
 180   1              int i=0,j=0;
 181   1              uchar temp_str[7]={'\0'};
 182   1              uchar test[7];
 183   1              int itemp= numtemp*100+0.5;
 184   1              if(itemp< 0)                            //当温度值为负数
 185   1                      temp_str[i]='-';
 186   1              if(itemp>=10000)
 187   1                      temp_str[i++] = itemp / 10000+'0';               //百位
 188   1              if(itemp>=1000)
 189   1                      temp_str[i++] =itemp % 10000 / 1000+'0';         //十位
 190   1              temp_str[i++] =  itemp % 1000 / 100+'0';
 191   1              temp_str[i++] =  '.';
 192   1              temp_str[i++] =  itemp % 100 / 10+'0';
 193   1              temp_str[i++] =  itemp % 10+'0';
 194   1              temp_str[i] = '\0';
 195   1              do                                                       //严格C语法不需要这部分，但keil好像存在一些问题
 196   1              {
 197   2                      test[j]=temp_str[j];
 198   2                      j++;    
 199   2              }while(temp_str[j]!='\0');
 200   1              test[j]='\0';
 201   1              return test;
 202   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    661    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      31
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
